{"ast":null,"code":"import _regeneratorRuntime from\"/Users/josman.perez/Documents/Development/Web/trivia-flexible/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/josman.perez/Documents/Development/Web/trivia-flexible/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/josman.perez/Documents/Development/Web/trivia-flexible/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import useState from'react-usestateref';import{useQuery}from\"@apollo/client\";import{FIND_QUESTIONS}from'../graphql-operations';import he from'he';import{app}from\"../index\";import{Modal,Button,Spinner,ListGroup}from\"react-bootstrap\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Questions(props){var play=props.play,setPlay=props.setPlay,category=props.category,setShowLastGame=props.setShowLastGame;var _React$useState=React.useState(-1),_React$useState2=_slicedToArray(_React$useState,2),questionCounter=_React$useState2[0],setQuestionCounter=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),questionArray=_React$useState4[0],setQuestionArray=_React$useState4[1];var _React$useState5=React.useState(10),_React$useState6=_slicedToArray(_React$useState5,1),numberOfQuestions=_React$useState6[0];// TODO: De momento es un valor fijo, pero podría ser variable como en iOS\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,3),asserts=_useState2[0],setAsserts=_useState2[1],refAsserts=_useState2[2];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,3),fails=_useState4[0],setFails=_useState4[1],refFails=_useState4[2];var answerArray=[];var _React$useState7=React.useState(new Date()),_React$useState8=_slicedToArray(_React$useState7,2),startTime=_React$useState8[0],setStartTime=_React$useState8[1];var _React$useState9=React.useState(false),_React$useState10=_slicedToArray(_React$useState9,2),counting=_React$useState10[0],setCounting=_React$useState10[1];// Get Stock via GraphQL and update 'stock' value\nvar _useQuery=useQuery(FIND_QUESTIONS,{variables:{query:{_partition:category.questions_partition}}}),loading=_useQuery.loading,data=_useQuery.data;var updateUser=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(time){var game,user;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;game={category:category.title,asserts:refAsserts.current,fails:refFails.current,date:new Date(),timeElapsed:time};user=app.currentUser;if(!(user.id===app.currentUser.id)){_context.next=6;break;}_context.next=6;return app.currentUser.functions.addNewGame(game);case 6:_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(\"Issue uppdating user game:\",_context.t0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function updateUser(_x){return _ref.apply(this,arguments);};}();var handleClose=function handleClose(){setQuestionArray([]);setPlay(false);};var questions=data?data.questions:null;function start(){setStartTime(new Date());};function end(){var endTime=new Date();var timeDiff=endTime-startTime;//in ms\n// strip the ms\ntimeDiff/=1000;// get seconds \nvar seconds=Math.round(timeDiff);return seconds;}function randomUniqueNum(range,outputCount){var arr=[];for(var i=1;i<=range;i++){arr.push(i);}var result=[];for(var _i=1;_i<=outputCount;_i++){var random=Math.floor(Math.random()*(range-_i));result.push(arr[random]);arr[random]=arr[range-_i];}return result;}function shuffleArray(array){for(var i=array.length-1;i>0;i--){// Generate random number \nvar j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}return array;}function createArrayOfQuestions(){var array=[];array.push(questionArray[questionCounter].correct_answer);array=array.concat(questionArray[questionCounter].incorrect_answers);shuffleArray(array);return array;}function addAnswer(question){answerArray.push(question);}function drawQuestion(question){return/*#__PURE__*/_jsx(ListGroup.Item,{as:\"li\",eventKey:question,action:true,onClick:function onClick(){return addAnswer(question);},children:he.decode(question)},question);}function displayQuestion(){var q=createArrayOfQuestions();if(!counting){setCounting(true);start();}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{children:he.decode(questionArray[questionCounter].question)}),/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",as:\"ul\",children:q&&q.map(function(question){return drawQuestion(question);})})]});}function setNextButton(){var lastAnswer=answerArray.pop();if(lastAnswer===questionArray[questionCounter].correct_answer){setAsserts(function(asserts){return asserts+1;});}else{setFails(function(fails){return fails+1;});}if(questionCounter<numberOfQuestions-1){setQuestionCounter(questionCounter<numberOfQuestions?questionCounter+1:0);}else{var time=end();updateUser(time).then(function(){handleClose();setShowLastGame(true);}).catch(function(){alert(\"An error occured\");handleClose();});}}function setButton(){if(questionCounter===-1){return/*#__PURE__*/_jsx(Button,{variant:\"success\",onClick:function onClick(){return setQuestionCounter(questionCounter+1);},children:\"START!\"});}else{return/*#__PURE__*/_jsxs(Button,{variant:\"info\",onClick:function onClick(){return setNextButton();},children:[\"Next \",numberOfQuestions-questionCounter]});}}function createQuestions(){if(!questionArray.length){var indexArray=randomUniqueNum(questions.length-1,numberOfQuestions);for(var index in indexArray){questionArray.push(questions[indexArray[index]]);}}else{return displayQuestion();}}return/*#__PURE__*/_jsxs(Modal,{show:play,onHide:handleClose,backdrop:\"static\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{children:category.title})}),/*#__PURE__*/_jsx(Modal.Body,{children:loading?/*#__PURE__*/_jsx(Spinner,{className:\"loader\",animation:\"border\",role:\"status\",children:/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:\"Loading...\"})}):createQuestions()}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:handleClose,children:\"Close\"}),setButton()]})]});}","map":{"version":3,"names":["React","useState","useQuery","FIND_QUESTIONS","he","app","Modal","Button","Spinner","ListGroup","Questions","props","play","setPlay","category","setShowLastGame","questionCounter","setQuestionCounter","questionArray","setQuestionArray","numberOfQuestions","asserts","setAsserts","refAsserts","fails","setFails","refFails","answerArray","Date","startTime","setStartTime","counting","setCounting","variables","query","_partition","questions_partition","loading","data","updateUser","time","game","title","current","date","timeElapsed","user","currentUser","id","functions","addNewGame","console","error","handleClose","questions","start","end","endTime","timeDiff","seconds","Math","round","randomUniqueNum","range","outputCount","arr","i","push","result","random","floor","shuffleArray","array","length","j","temp","createArrayOfQuestions","correct_answer","concat","incorrect_answers","addAnswer","question","drawQuestion","decode","displayQuestion","q","map","setNextButton","lastAnswer","pop","then","catch","alert","setButton","createQuestions","indexArray","index"],"sources":["/Users/josman.perez/Documents/Development/Web/trivia-flexible/src/components/Questions.js"],"sourcesContent":["import React from \"react\";\nimport useState from 'react-usestateref'\nimport { useQuery } from \"@apollo/client\";\nimport { FIND_QUESTIONS } from '../graphql-operations';\nimport he from 'he';\nimport {\n    app\n} from \"../index\";\nimport {\n    Modal,\n    Button,\n    Spinner,\n    ListGroup\n} from \"react-bootstrap\";\n\nexport default function Questions(props) {\n\n    const { play, setPlay, category, setShowLastGame } = props;\n\n    const [questionCounter, setQuestionCounter] = React.useState(-1);\n    const [questionArray, setQuestionArray] = React.useState([]);\n    const [numberOfQuestions] = React.useState(10); // TODO: De momento es un valor fijo, pero podría ser variable como en iOS\n    var [asserts, setAsserts, refAsserts] = useState(0)\n    var [fails, setFails, refFails] = useState(0)\n    var answerArray = [];\n    const [startTime, setStartTime] = React.useState(new Date());\n    const [counting, setCounting] = React.useState(false);\n\n\n    // Get Stock via GraphQL and update 'stock' value\n    const { loading, data } = useQuery(FIND_QUESTIONS, {\n        variables: { query: { _partition: category.questions_partition } },\n    });\n\n    const updateUser = async (time) => {\n        try {\n            const game = {\n                category: category.title,\n                asserts: refAsserts.current,\n                fails: refFails.current,\n                date: new Date(),\n                timeElapsed: time\n            }\n            const user = app.currentUser;\n            if (user.id === app.currentUser.id) {\n                await app.currentUser.functions.addNewGame(game);\n            }\n            // await updateUserGame({\n            //     variables: {\n            //         query: {_id: app.currentUser.id},\n            //         set: { games: game }\n            //     }\n            // });\n        } catch (error) {\n            console.error(\"Issue uppdating user game:\", error);\n        }\n    }\n\n    const handleClose = (() => {\n        setQuestionArray([])\n        setPlay(false)\n    });\n    const questions = data ? data.questions : null;\n\n    function start() {\n        setStartTime(new Date())\n    };\n\n    function end() {\n        const endTime = new Date();\n        var timeDiff = endTime - startTime; //in ms\n        // strip the ms\n        timeDiff /= 1000;\n\n        // get seconds \n        var seconds = Math.round(timeDiff);\n        return seconds;\n    }\n\n    function randomUniqueNum(range, outputCount) {\n        let arr = []\n        for (let i = 1; i <= range; i++) {\n            arr.push(i)\n        }\n\n        let result = [];\n\n        for (let i = 1; i <= outputCount; i++) {\n            const random = Math.floor(Math.random() * (range - i));\n            result.push(arr[random]);\n            arr[random] = arr[range - i];\n        }\n\n        return result;\n    }\n\n\n    function shuffleArray(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            // Generate random number \n            var j = Math.floor(Math.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    }\n\n    function createArrayOfQuestions() {\n        let array = []\n        array.push(questionArray[questionCounter].correct_answer);\n        array = array.concat(questionArray[questionCounter].incorrect_answers);\n        shuffleArray(array)\n        return array\n    }\n\n    function addAnswer(question) {\n        answerArray.push(question);\n    }\n\n    function drawQuestion(question) {\n        return (\n            <ListGroup.Item\n                as=\"li\"\n                key={question}\n                eventKey={question}\n                action onClick={() => addAnswer(question)}>\n                {he.decode(question)}\n            </ListGroup.Item>)\n    }\n\n    function displayQuestion() {\n        const q = createArrayOfQuestions()\n        if (!counting) {\n            setCounting(true);\n            start();\n        }\n        return (\n            <div>\n                <span>{he.decode(questionArray[questionCounter].question)}</span>\n                <ListGroup variant=\"flush\" as=\"ul\">\n                    {q && q.map((question) => {\n                        return drawQuestion(question)\n                    })}\n                </ListGroup>\n            </div>\n        )\n    }\n\n    function setNextButton() {\n        const lastAnswer = answerArray.pop()\n        if (lastAnswer === questionArray[questionCounter].correct_answer) {\n            setAsserts(asserts => asserts + 1)\n        } else {\n            setFails(fails => fails + 1)\n        }\n        if (questionCounter < numberOfQuestions - 1) {\n            setQuestionCounter(\n                questionCounter < numberOfQuestions ? questionCounter + 1 : 0\n            )\n        } else {\n            const time = end();\n            updateUser(time).then(() => {\n                handleClose();\n                setShowLastGame(true);\n            }).catch(() => {\n                alert(\"An error occured\");\n                handleClose();\n            });\n        }\n    }\n\n    function setButton() {\n        if (questionCounter === -1) {\n            return (\n                <Button\n                    variant=\"success\"\n                    onClick={() => setQuestionCounter(questionCounter + 1)}>\n                    START!\n                </Button>)\n        } else {\n            return (\n                <Button\n                    variant=\"info\"\n                    onClick={() => setNextButton()}>\n                    Next {numberOfQuestions - questionCounter}\n                </Button>)\n        }\n\n    }\n\n    function createQuestions() {\n        if (!questionArray.length) {\n            const indexArray = randomUniqueNum(questions.length - 1, numberOfQuestions);\n            for (var index in indexArray) {\n                questionArray.push(questions[indexArray[index]])\n            }\n        } else {\n            return displayQuestion()\n        }\n    }\n\n    return (\n        <Modal show={play} onHide={handleClose} backdrop=\"static\">\n            <Modal.Header closeButton>\n                <Modal.Title>{category.title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {loading ?\n                    (<Spinner className=\"loader\" animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>) :\n                    (createQuestions())}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n              </Button>\n                {setButton()}\n            </Modal.Footer>\n        </Modal>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}