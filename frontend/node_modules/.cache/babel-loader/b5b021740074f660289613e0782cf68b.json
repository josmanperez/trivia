{"ast":null,"code":"import _regeneratorRuntime from\"/Users/josman.perez/Documents/Development/Web/trivia-flexible/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/josman.perez/Documents/Development/Web/trivia-flexible/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React from'react';import{createRoot}from'react-dom/client';import'./index.css';import App from'./App';import{ApolloProvider,ApolloClient,HttpLink,InMemoryCache}from\"@apollo/client\";// Realm\nimport*as Realm from\"realm-web\";import{jsx as _jsx}from\"react/jsx-runtime\";export var APP_ID=\"triviaflexible-zuyoo\";export var app=new Realm.App({id:APP_ID});// Gets a valid Realm user access token to authenticate requests\nfunction getValidAccessToken(){return _getValidAccessToken.apply(this,arguments);}// Construct a new Apollo HttpLink that connects to your app's GraphQL endpoint\nfunction _getValidAccessToken(){_getValidAccessToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(app.currentUser){_context2.next=4;break;}return _context2.abrupt(\"return\",\"\");case 4:_context2.next=6;return app.currentUser.refreshCustomData();case 6:return _context2.abrupt(\"return\",app.currentUser.accessToken);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _getValidAccessToken.apply(this,arguments);}var graphql_url=\"https://eu-west-1.aws.realm.mongodb.com/api/client/v2.0/app/\".concat(APP_ID,\"/graphql\");// Configure the ApolloClient to connect to your app's GraphQL endpoint\nexport var client=new ApolloClient({link:new HttpLink({uri:graphql_url,// We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\n// The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\n// access token before sending the request.\nfetch:function(_fetch){function fetch(_x,_x2){return _fetch.apply(this,arguments);}fetch.toString=function(){return _fetch.toString();};return fetch;}(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(uri,options){var accessToken;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getValidAccessToken();case 2:accessToken=_context.sent;options.headers.Authorization=\"Bearer \".concat(accessToken);return _context.abrupt(\"return\",fetch(uri,options));case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x3,_x4){return _ref.apply(this,arguments);};}())}),cache:new InMemoryCache()});var container=document.getElementById('root');var root=createRoot(container);root.render(/*#__PURE__*/_jsx(ApolloProvider,{client:client,children:/*#__PURE__*/_jsx(App,{})}));","map":{"version":3,"names":["React","createRoot","App","ApolloProvider","ApolloClient","HttpLink","InMemoryCache","Realm","APP_ID","app","id","getValidAccessToken","currentUser","refreshCustomData","accessToken","graphql_url","client","link","uri","fetch","options","headers","Authorization","cache","container","document","getElementById","root","render"],"sources":["/Users/josman.perez/Documents/Development/Web/trivia-flexible/src/index.js"],"sourcesContent":["import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { \n  ApolloProvider,\n  ApolloClient, \n  HttpLink, \n  InMemoryCache } from \"@apollo/client\";\n\n// Realm\nimport * as Realm from \"realm-web\";\nexport const APP_ID = \"triviaflexible-zuyoo\";\nexport const app = new Realm.App({ id: APP_ID });\n\n// Gets a valid Realm user access token to authenticate requests\nasync function getValidAccessToken() {\n  // Guarantee that there's a logged in user with a valid access token\n  if (!app.currentUser) {\n    // If no user is logged in, log in an anonymous user. Tnodehe logged in user will have a valid\n    // access token.\n    return \"\";\n  } else {\n    // An already logged in user's access token might be stale. To guarantee that the token is\n    // valid, we refresh the user's custom data which also refreshes their access token.\n    await app.currentUser.refreshCustomData();\n  }\n  return app.currentUser.accessToken\n}\n\n// Construct a new Apollo HttpLink that connects to your app's GraphQL endpoint\nconst graphql_url = `https://eu-west-1.aws.realm.mongodb.com/api/client/v2.0/app/${APP_ID}/graphql`;\n\n// Configure the ApolloClient to connect to your app's GraphQL endpoint\nexport const client = new ApolloClient({\n  link: new HttpLink({\n    uri: graphql_url,\n    // We define a custom fetch handler for the Apollo client that lets us authenticate GraphQL requests.\n    // The function intercepts every Apollo HTTP request and adds an Authorization header with a valid\n    // access token before sending the request.\n    fetch: async (uri, options) => {\n      const accessToken = await getValidAccessToken();\n      options.headers.Authorization = `Bearer ${accessToken}`;\n      return fetch(uri, options);\n    },\n  }),\n  cache: new InMemoryCache()\n});\n\nconst container = document.getElementById('root');\nconst root = createRoot(container);\nroot.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n);"],"mappings":"sTAAA,MAAOA,MAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAO,aAAP,CACA,MAAOC,IAAP,KAAgB,OAAhB,CACA,OACEC,cADF,CAEEC,YAFF,CAGEC,QAHF,CAIEC,aAJF,KAIuB,gBAJvB,CAMA;AACA,MAAO,GAAKC,MAAZ,KAAuB,WAAvB,C,2CACA,MAAO,IAAMC,OAAM,CAAG,sBAAf,CACP,MAAO,IAAMC,IAAG,CAAG,GAAIF,MAAK,CAACL,GAAV,CAAc,CAAEQ,EAAE,CAAEF,MAAN,CAAd,CAAZ,CAEP;QACeG,oB,sDAcf;+GAdA,6IAEOF,GAAG,CAACG,WAFX,2DAKW,EALX,gCASUH,IAAG,CAACG,WAAJ,CAAgBC,iBAAhB,EATV,yCAWSJ,GAAG,CAACG,WAAJ,CAAgBE,WAXzB,0D,sDAeA,GAAMC,YAAW,uEAAkEP,MAAlE,YAAjB,CAEA;AACA,MAAO,IAAMQ,OAAM,CAAG,GAAIZ,aAAJ,CAAiB,CACrCa,IAAI,CAAE,GAAIZ,SAAJ,CAAa,CACjBa,GAAG,CAAEH,WADY,CAEjB;AACA;AACA;AACAI,KAAK,6OAAE,iBAAOD,GAAP,CAAYE,OAAZ,0JACqBT,oBAAmB,EADxC,QACCG,WADD,eAELM,OAAO,CAACC,OAAR,CAAgBC,aAAhB,kBAA0CR,WAA1C,EAFK,gCAGEK,KAAK,CAACD,GAAD,CAAME,OAAN,CAHP,wDAAF,oEALY,CAAb,CAD+B,CAYrCG,KAAK,CAAE,GAAIjB,cAAJ,EAZ8B,CAAjB,CAAf,CAeP,GAAMkB,UAAS,CAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlB,CACA,GAAMC,KAAI,CAAG1B,UAAU,CAACuB,SAAD,CAAvB,CACAG,IAAI,CAACC,MAAL,cACE,KAAC,cAAD,EAAgB,MAAM,CAAEZ,MAAxB,uBACE,KAAC,GAAD,IADF,EADF"},"metadata":{},"sourceType":"module"}